class Solution:
    def generate(self, i, sub, ans, candidates, target):
        if target == 0:
            ans.append(sub.copy())
            return
        if i >= len(candidates):
            return
        for j in range(i, len(candidates)):
            if j > i and candidates[j] == candidates[j - 1]:
                continue
            if candidates[j] > target:
                break
            sub.append(candidates[j])
            self.generate(j + 1, sub, ans, candidates, target - candidates[j])
            sub.pop()
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        candidates.sort()
        ans = []
        sub = []
        self.generate(0, sub, ans, candidates, target)
        return ans
