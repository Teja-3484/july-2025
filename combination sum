class Solution:
    def generate(self,i,sub,ans,candidates,target):
        if target<0:
            return
        if i==len(candidates):
            return
        if target==0:
            ans.append(sub.copy())
            return
        sub.append(candidates[i])
        self.generate(i,sub,ans,candidates,target-candidates[i])
        sub.pop()
        self.generate(i+1,sub,ans,candidates,target)
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        i=0
        sub=[]
        ans=[]
        self.generate(i,sub,ans,candidates,target)
        return ans
